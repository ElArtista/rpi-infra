version: "3.8"

volumes:
  portainer:

networks:
  web:
    name: web
  app:
    name: app
  mon:
    name: mon

services:
  # Reverse proxy
  reverse-proxy:
    image: traefik
    container_name: "reverse-proxy"
    command:
      - --global.sendAnonymousUsage=false
      - --api.dashboard=true
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --providers.docker.defaultRule=Host(`{{ index .Labels "com.docker.compose.service" }}.${DOMAIN}`)
      - --entrypoints.http.address=:80
    ports:
      - "80:80"      # HTTP port
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - web
      - app
      - mon
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.traefik.entrypoints=http"

  # Demo web server
  web-server:
    build: "./web-server"
    image: "nginx:alpine"
    container_name: "web-server"
    restart: unless-stopped
    networks:
      - app
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=app"
      - "traefik.http.routers.web-server.rule=Path(`/`)"
      - "traefik.http.routers.web-server.entrypoints=http"

  # Container management
  portainer:
    image: portainer/portainer:alpine
    container_name: "portainer"
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer:/data
    networks:
      - mon
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mon"
      - "traefik.http.routers.portainer.entrypoints=http"
